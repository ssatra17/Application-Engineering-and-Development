/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Car;
import Business.CarInformation;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author saura
 */
public class searchPanel extends javax.swing.JPanel {

    /**
     * Creates new form searchPanel
     */
    private CarInformation carInfo;
    private JPanel rightPanel;
    private Car car;
   
    searchPanel(CarInformation carInfo, JPanel rightPanel) {
        initComponents();
        this.carInfo = carInfo;
        this.rightPanel = rightPanel;
       populate(carInfo);    
    }
      
    public void populate(CarInformation carInfo){
        DefaultTableModel dtm = (DefaultTableModel)tblCar.getModel();
        dtm.setRowCount(0);
        
        for(Car a : carInfo.getCarDirectory()){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0]=a;
            row[1]=a.getSerial_num();
            row[2]=a.getModel_num();
            row[3]=a.getManufactured_year();
            row[4]=a.getAvailble_city();
            row[5]=a.getMin_seats();
            row[6]=a.getMax_seats();
            row[7]=a.isAvailable();
            row[8]=a.getManufacturer();
            row[9]=a.isMaintenance_certificate();
            
            dtm.addRow(row);
        }
        
        lastUpdateTxt.setEditable(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCar = new javax.swing.JTable();
        carCombobox = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        brandTxt = new javax.swing.JTextField();
        minText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        yearTxt = new javax.swing.JTextField();
        modelTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        serialTxt = new javax.swing.JTextField();
        maxText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        manuTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cityText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        mcCheckbox = new javax.swing.JCheckBox();
        availCheckbox = new javax.swing.JCheckBox();
        firstAvailBtn = new javax.swing.JButton();
        lastUpdateTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 204, 255));

        tblCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Serial Number", "Model Number", "Man. Year", "City", "Min Seats", "Max Seats", "Availibility", "Manufacturer", "Maintainance Certificate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCar);
        if (tblCar.getColumnModel().getColumnCount() > 0) {
            tblCar.getColumnModel().getColumn(0).setResizable(false);
            tblCar.getColumnModel().getColumn(1).setResizable(false);
            tblCar.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblCar.getColumnModel().getColumn(2).setResizable(false);
            tblCar.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblCar.getColumnModel().getColumn(3).setResizable(false);
            tblCar.getColumnModel().getColumn(4).setResizable(false);
            tblCar.getColumnModel().getColumn(5).setResizable(false);
            tblCar.getColumnModel().getColumn(6).setResizable(false);
            tblCar.getColumnModel().getColumn(7).setResizable(false);
            tblCar.getColumnModel().getColumn(8).setResizable(false);
            tblCar.getColumnModel().getColumn(9).setResizable(false);
        }

        carCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brand", "Manufactured Year", "Model Number", "Serial Number", "City", "Manufacturer", "Seats", "Availibility", "Expired Maintainance" }));
        carCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carComboboxActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Search by :");

        jLabel2.setText("Brand");

        brandTxt.setEnabled(false);

        minText.setEnabled(false);

        jLabel6.setText("Minimum Seats");

        jLabel4.setText("Manufacture Year");

        yearTxt.setEnabled(false);

        modelTxt.setEnabled(false);

        jLabel5.setText("Model Number");

        jLabel3.setText("Serial Number");

        serialTxt.setEnabled(false);

        maxText.setEnabled(false);

        jLabel11.setText("Manufacturer");

        manuTxt.setEnabled(false);

        jLabel9.setText("Availaible City");

        cityText.setEnabled(false);

        jLabel10.setText("Maintainance Certificate");

        jLabel8.setText("Availibility");

        jLabel7.setText("Maximum Seats");

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Product");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        mcCheckbox.setText("Expired");
        mcCheckbox.setEnabled(false);

        availCheckbox.setText("Is Car Available?");
        availCheckbox.setEnabled(false);

        firstAvailBtn.setText("First Available Car");
        firstAvailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstAvailBtnActionPerformed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Catalog Last Update:");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Features");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Update/Delete ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(carCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(102, 102, 102))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(serialTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(brandTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(modelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(minText, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(179, 179, 179)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxText, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(manuTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mcCheckbox)
                            .addComponent(availCheckbox)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(firstAvailBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34)
                        .addComponent(lastUpdateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(searchButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(447, 447, 447)
                        .addComponent(btnBack)))
                .addContainerGap(334, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnView))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addGap(16, 16, 16)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brandTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serialTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addGap(34, 34, 34)
                        .addComponent(firstAvailBtn)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastUpdateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maxText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(manuTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mcCheckbox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(availCheckbox))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void carComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carComboboxActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String values = (String) carCombobox.getSelectedItem();

        if (values.equalsIgnoreCase("Brand"))
        {
        brandJPanel brandpanel = new brandJPanel(carInfo, rightPanel);
        rightPanel.add("brandPanel", brandpanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);  
        }

       if (values.equalsIgnoreCase("Serial Number"))
        {
        serialJPanel serialpanel = new serialJPanel(carInfo, rightPanel);
        rightPanel.add("serialPanel", serialpanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        }

        if (values.equalsIgnoreCase("Manufactured Year"))
        {
        ManuYearJPanel manupanel = new ManuYearJPanel(carInfo, rightPanel);
        rightPanel.add("ManuYearPanel", manupanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        }

        if (values.equalsIgnoreCase("Model Number"))
        {
        modelJPanel modelpanel = new modelJPanel(carInfo, rightPanel);
        rightPanel.add("modelJPanel", modelpanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        }

        if (values.equalsIgnoreCase("City"))
        {
        cityJPanel citypanel = new cityJPanel(carInfo, rightPanel);
        rightPanel.add("cityJPanel", citypanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        }

        if (values.equalsIgnoreCase("Manufacturer"))
        {
        manufactJPanel manufpanel = new manufactJPanel(carInfo, rightPanel);
        rightPanel.add("manufactJPanel", manufpanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        }

        if (values.equalsIgnoreCase("Seats"))
        {
        seatsJPanel seatpanel = new seatsJPanel(carInfo, rightPanel);
        rightPanel.add("seatPanel", seatpanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        }

       
       if (values.equalsIgnoreCase("Availibility"))
        {
        availJPanel avail = new availJPanel(carInfo, rightPanel);
        rightPanel.add("availJPanel", avail);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        }
       
        if (values.equalsIgnoreCase("Expired Maintainance"))
        {
        expiredJPanel lastupdate = new expiredJPanel(carInfo, rightPanel);
        rightPanel.add("availJPanel", lastupdate);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        }

       
               

    }//GEN-LAST:event_searchButtonActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
               
        int selectedRow = tblCar.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please Select a Row" , "Warning" , JOptionPane.WARNING_MESSAGE);
        }
        else {
            
            String brand = brandTxt.getText();
        if(brand == null || brand.equals("")){
            JOptionPane.showMessageDialog(null, "Brand Cant be empty");
            return;
        }
        
        else if 
                
              (! brand.matches("[A-Za-z]+$")){
            
                JOptionPane.showMessageDialog(null,"Please enter a valid brand name!");
                return;
            }
        
        String serial = serialTxt.getText();
        if(serial.equals("") || serial == null){
            JOptionPane.showMessageDialog(null, "Serial Number cant be empty");
            return;
        }
        try{
            Integer.parseInt(serialTxt.getText());
        } catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null,"Please enter a number for Serial Number");
        return;
    }
        String model = modelTxt.getText();
        if(model == null || model.equals("")){
            JOptionPane.showMessageDialog(null, "Model Cant be empty");
            return;
        }
        
        String year = yearTxt.getText();
        if(year.equals("") || year == null){
            JOptionPane.showMessageDialog(null, "Year cant be empty");
            return;
        }
        try{
            Integer.parseInt(yearTxt.getText());
        } catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null,"Please enter a number for Year");
        return;
    }
        
        String min = minText.getText();
        if(min.equals("") || min == null){
            JOptionPane.showMessageDialog(null, "Minimum Seats cant be empty");
            return;
        }
        try{
            Integer.parseInt(minText.getText());
        } catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null,"Please enter a number for Minimum Seats");
        return;
    }
        String max = maxText.getText();
        if(max.equals("") || max == null){
            JOptionPane.showMessageDialog(null, "Maximum Seats cant be empty");
            return;
        }
        try{
            Integer.parseInt(maxText.getText());
        } catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null,"Please enter a number for Maximum Seats");
        return;
    }
        
        String manuf = manuTxt.getText();
        if(manuf == null || manuf.equals("")){
            JOptionPane.showMessageDialog(null, "Brand Cant be empty");
            return;
        }
        
        else if 
                
              (! manuf.matches("[A-Za-z]+$")){
            
                JOptionPane.showMessageDialog(null,"Please enter a valid brand name!");
                return;
            }
        
        String city = cityText.getText();
        if(city == null || city.equals("")){
            JOptionPane.showMessageDialog(null, "Brand Cant be empty");
            return;
        }
        
        else if 
                
              (! city.matches("[A-Za-z]+$")){
            
                JOptionPane.showMessageDialog(null,"Please enter a valid brand name!");
                return;
            }
                       
      DefaultTableModel dtm = (DefaultTableModel)tblCar.getModel();
      //brandTxt.setText(dtm.getValueAt(selectedRow,0).toString());
        Car car = (Car)dtm.getValueAt(selectedRow, 0);
        
        car.setBrand(brandTxt.getText());
        car.setModel_num(modelTxt.getText());
        car.setSerial_num(Integer.parseInt(serialTxt.getText()));
        car.setManufactured_year(Integer.parseInt(yearTxt.getText()));
        car.setManufacturer(manuTxt.getText());
        car.setAvailble_city(cityText.getText());
        car.setMin_seats(Integer.parseInt(minText.getText()));
        car.setMax_seats(Integer.parseInt(maxText.getText()));
        car.setAvailable(availCheckbox.isSelected());
        car.setMaintenance_certificate(mcCheckbox.isSelected());

        
        brandTxt.setEnabled(false);
        modelTxt.setEnabled(false);
        serialTxt.setEnabled(false);
        yearTxt.setEnabled(false);
        minText.setEnabled(false);
        yearTxt.setEnabled(false);
        maxText.setEnabled(false);
        manuTxt.setEnabled(false);
        cityText.setEnabled(false);
        mcCheckbox.setEnabled(false);
        availCheckbox.setEnabled(false);
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);

        populate(carInfo);
            
        JOptionPane.showMessageDialog(null, "Car updated successfully");
        
        Date today = new Date();
        SimpleDateFormat sf = new SimpleDateFormat("E yyyy.MM.dd 'at' hh:mm:ss a zzz"); 
        String date = sf.format(today);
        lastUpdateTxt.setText(date);
        
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        brandTxt.setEnabled(true);
        modelTxt.setEnabled(true);
        serialTxt.setEnabled(true);
        yearTxt.setEnabled(true);
        minText.setEnabled(true);
        yearTxt.setEnabled(true);
        maxText.setEnabled(true);
        manuTxt.setEnabled(true);
        cityText.setEnabled(true);
        mcCheckbox.setEnabled(true);
        availCheckbox.setEnabled(true);
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
       this.rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();

        layout.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCar.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please Select a Row" , "Warning" , JOptionPane.WARNING_MESSAGE);
        }
        else {
                 
      DefaultTableModel dtm = (DefaultTableModel)tblCar.getModel();
      brandTxt.setText(dtm.getValueAt(selectedRow,0).toString());
      serialTxt.setText(dtm.getValueAt(selectedRow,1).toString());
      modelTxt.setText(dtm.getValueAt(selectedRow,2).toString());
      yearTxt.setText(dtm.getValueAt(selectedRow,3).toString());
      cityText.setText(dtm.getValueAt(selectedRow,4).toString());
      minText.setText(dtm.getValueAt(selectedRow,5).toString());
      maxText.setText(dtm.getValueAt(selectedRow,6).toString());
      manuTxt.setText(dtm.getValueAt(selectedRow,8).toString());
      availCheckbox.setSelected((boolean) dtm.getValueAt(selectedRow,7));
      mcCheckbox.setSelected((boolean) dtm.getValueAt(selectedRow,9));
      
            
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCar.getSelectedRow();
        if(selectedRow>=0){
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??","Warning",selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                Car car = (Car)tblCar.getValueAt(selectedRow, 0);
                carInfo.deleteCar(car);
                populate(carInfo);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void firstAvailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstAvailBtnActionPerformed
        // TODO add your handling code here:
        FirstAvailJPanel firstpanel = new FirstAvailJPanel(carInfo, rightPanel);
        rightPanel.add("FirstAvailJPanel", firstpanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        
        
    }//GEN-LAST:event_firstAvailBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox availCheckbox;
    private javax.swing.JTextField brandTxt;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> carCombobox;
    private javax.swing.JTextField cityText;
    private javax.swing.JButton firstAvailBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastUpdateTxt;
    private javax.swing.JTextField manuTxt;
    private javax.swing.JTextField maxText;
    private javax.swing.JCheckBox mcCheckbox;
    private javax.swing.JTextField minText;
    private javax.swing.JTextField modelTxt;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField serialTxt;
    private javax.swing.JTable tblCar;
    private javax.swing.JTextField yearTxt;
    // End of variables declaration//GEN-END:variables
}
